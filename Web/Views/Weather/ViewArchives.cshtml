@using System.Globalization

@model Web.ViewModels.WeatherViewModel

@{
    ViewBag.Title = "Weather Data";
}

<h2>Weather Data</h2>

@using (Html.BeginForm("ViewArchives", "Weather", FormMethod.Get))
{
    <div class="form-inline">
        <label>Select Month: </label>
        @Html.DropDownList("month", new SelectList(Enumerable.Range(1, 12).Select(x => new { Value = x, Text = CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(x) }),
            "Value", "Text"), "All Months", new { @class = "form-control", onchange = "this.form.submit();" })

        <label>Select Year: </label>
        @Html.DropDownList("year", new SelectList(Model.AvailableYears.Select(x => new { Value = x, Text = x }),
            "Value", "Text"), "All Years", new { @class = "form-control", onchange = "this.form.submit();" })
    </div>

    <div class="form-inline">
        <label>Show </label>
        @Html.DropDownListFor(m => m.PageSize, new SelectList(new List<int> { 10, 20, 50, 100 }, Model.PageSize),
            new { @class = "form-control", onchange = "this.form.submit();" })
        <span>items per page</span>
    </div>
}

<table class="table table-primary table-striped table-bordered align-middle text-center">
    <thead class="align-middle">
        <tr>
            <th>Date and Time</th>
            <th>Temperature (°C)</th>
            <th>Humidity (%)</th>
            <th>Dew Point (°C)</th>
            <th>Atmospheric Pressure (mmHg)</th>
            <th>Wind Direction</th>
            <th>Wind Velocity (m/s)</th>
            <th>Cloudiness (%)</th>
            <th style="min-width:80px;">Lower Cloud Limit (m)</th>
            <th>Horizontal Visibility (km)</th>
            <th>Weather Events</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.WeatherData != null && Model.WeatherData.Any())
        {
            @foreach (var item in Model.WeatherData)
            {
                <tr>
                    <td>@item.DateAndTime.ToString("g")</td>
                    <td>@item.Temperature</td>
                    <td>@item.Humidity</td>
                    <td>@item.DewPoint</td>
                    <td>@item.AtmosphericPressure</td>
                    <td>@item.WindDirection</td>
                    <td>@item.WindVelocity</td>
                    <td>@item.Cloudiness</td>
                    <td>@item.LowerCloudLimit</td>
                    <td>@item.HorizontalVisibility</td>
                    <td>@item.WeatherEvents</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="11">No data found</td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("ViewArchives", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize, month = Model.SelectedMonth, year = Model.SelectedYear })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @{
            int startPage = Math.Max(1, Model.CurrentPage - 2);
            int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
            if (startPage > 1)
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("ViewArchives", new { page = 1, pageSize = Model.PageSize, month = Model.SelectedMonth, year = Model.SelectedYear })">1</a></li>
                if (startPage > 2)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
            }
            for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("ViewArchives", new { page = i, pageSize = Model.PageSize, month = Model.SelectedMonth, year = Model.SelectedYear })">@i</a>
                </li>
            }
            if (endPage < Model.TotalPages)
            {
                if (endPage < Model.TotalPages - 1)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
                <li class="page-item"><a class="page-link" href="@Url.Action("ViewArchives", new { page = Model.TotalPages, pageSize = Model.PageSize, month = Model.SelectedMonth, year = Model.SelectedYear })">@Model.TotalPages</a></li>
            }
        }
        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("ViewArchives", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize, month = Model.SelectedMonth, year = Model.SelectedYear })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>
<a href="@Url.Action("Add", "Weather")" class="btn btn-primary">Add new data</a>